[{"/workspace/TGC9-react/03-states/src/reportWebVitals.js":"1","/workspace/TGC9-react/03-states/src/App.js":"2","/workspace/TGC9-react/03-states/src/components/NumberBox.js":"3","/workspace/TGC9-react/03-states/src/components/ImageBox.js":"4","/workspace/TGC9-react/03-states/src/components/Timer.js":"5"},{"size":362,"mtime":1608186513530,"results":"6","hashOfConfig":"7"},{"size":592,"mtime":1608191506006,"results":"8","hashOfConfig":"7"},{"size":1094,"mtime":1608192107421,"results":"9","hashOfConfig":"7"},{"size":929,"mtime":1608192138045,"results":"10","hashOfConfig":"7"},{"size":979,"mtime":1608192107641,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yw8358",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/TGC9-react/03-states/src/reportWebVitals.js",[],"/workspace/TGC9-react/03-states/src/App.js",[],"/workspace/TGC9-react/03-states/src/components/NumberBox.js",[],"/workspace/TGC9-react/03-states/src/components/ImageBox.js",["22","23"],"/workspace/TGC9-react/03-states/src/components/Timer.js",["24"],{"ruleId":"25","severity":1,"message":"26","line":14,"column":21,"nodeType":"27","endLine":14,"endColumn":52},{"ruleId":"28","severity":1,"message":"29","line":22,"column":36,"nodeType":"30","messageId":"31","endLine":22,"endColumn":38},{"ruleId":"32","severity":1,"message":"33","line":37,"column":23,"nodeType":"34","endLine":37,"endColumn":33},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]